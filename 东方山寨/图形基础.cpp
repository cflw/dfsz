#include "图形基础.h"
#include "图形引擎.h"
#include "游戏.h"
#include "图形工厂.h"
namespace 东方山寨 {
//==============================================================================
// I图形
//==============================================================================
void I图形::f接口_计算() {
}
void I图形::f接口_更新() {
}
void I图形::f接口_初始化(const S图形参数 &a参数) {
}
bool I图形::f接口_i可销毁() const {
	return m标志[e结束];
}
void I图形::f对象_使用() {
	m标志[e使用] = true;
	m计数指针->f加计数();
}
void I图形::f对象_销毁() {
	m标志.reset();
	m图形缓冲->f对象_销毁();
	m计数指针->f减计数();
}
bool I图形::f对象_i使用() {
	return m标志[e使用];
}
void I图形::f动作_结束() {
	m标志[e结束] = true;
}
//==============================================================================
// 粒子
//==============================================================================
void I粒子::f接口_初始化(const S图形参数 &a参数) {
	I图形::f接口_初始化(a参数);
	m坐标 = a参数.m坐标;
	m速度 = a参数.m速度;
	m寿命 = a参数.m寿命;
}
bool I粒子::f接口_i可销毁() const {
	return fi死亡();
}
void I粒子::f计算_运动() {
	m坐标 += m速度 * m游戏速度->fg秒();
}
void I粒子::f计算_生命() {
	m生命 += m游戏速度->fg秒();
}
float I粒子::fg生命百分比() const {
	return m生命 / m寿命;
}
float I粒子::fg反生命百分比() const {
	return 1 - fg生命百分比();
}
bool I粒子::fi死亡() const {
	return m生命 >= m寿命;
}
}	//namespace 东方山寨