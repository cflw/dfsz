#include "标识.h"
#include "玩家炸弹基础.h"
#include "玩家子弹制造机.h"
#include "游戏.h"
#include "图形引擎.h"
namespace 东方山寨 {
//==============================================================================
// 玩家炸弹扩展
//==============================================================================
void C玩家炸弹::f接口_初始化(const S玩家子弹参数 &a参数) {
	m坐标 = a参数.m坐标;
	m速度 = a参数.m速度;
	m方向 = a参数.m速度.fg方向r();
	if (a参数.m子弹属性) {
		m子弹属性 = a参数.m子弹属性;
	} else {
		auto &va子弹属性 = C游戏::fg资源().fg玩家子弹属性();
		m子弹属性 = va子弹属性.fg指针((int)E玩家炸弹::e测试炸弹);
	}
}
float C玩家炸弹::f接口_g判定半径() const {
	return c判定半径;
}
bool C玩家炸弹::f接口_敌机判定(C敌机与玩家子弹判定 &a判定) {
	const t圆形 v判定圆{m坐标, this->f接口_g判定半径()};
	return a判定.f玩家子弹_提交判定(v判定圆);
}
bool C玩家炸弹::f接口_子弹判定(C子弹与玩家炸弹判定 &a判定) {
	const t圆形 v判定圆{m坐标, this->f接口_g判定半径()};
	return a判定.f炸弹_提交判定(v判定圆);
}
bool C玩家炸弹::f接口_i产生道具() const {
	return m标志[C玩家子弹::e产生道具];
}
void C玩家炸弹发射器::f接口_初始化() {
}
void C玩家炸弹发射器::f接口_计算() {
	if (m剩余时间 > 0) {
		this->f接口_产生子弹();
		f基础_复位();
	}
}
}	//namespace 东方山寨