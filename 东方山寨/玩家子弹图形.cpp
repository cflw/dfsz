#include "图层.h"
#include "玩家子弹图形.h"
#include "玩家子弹基础.h"
#include "游戏.h"
#include "图形_画图片.h"
namespace 东方山寨 {
//==============================================================================
// 普通图片
//==============================================================================
C玩家子弹图形_图片::C玩家子弹图形_图片(const C玩家子弹 &a对象, C缓冲数组<I图形缓冲> &aa图形缓冲):
	I对象图形<C玩家子弹>(a对象) {
	m图形缓冲 = aa图形缓冲.f新建<C图形缓冲>();
	m图形缓冲->f初始化_图层((int)E图层::e玩家子弹);
	m图形缓冲->m属性 = a对象.m子弹属性;
}
void C玩家子弹图形_图片::f计算() {

}
void C玩家子弹图形_图片::f更新() {
	m图形缓冲->m坐标 = m对象->m坐标;
	m图形缓冲->m透明度 = m对象->f基础_g出现透明度();
	m图形缓冲->m方向 = m对象->m方向;
}
I图形缓冲 &C玩家子弹图形_图片::fg图形缓冲() const {
	return *m图形缓冲;
}
void C玩家子弹图形_图片::C图形缓冲::f显示() const {
	auto &v画图片 = C游戏::fg图形().fg画图片();
	v画图片.fs坐标(m坐标);
	v画图片.fs纹理(*m属性->m纹理);
	v画图片.fs透明度(m透明度);
	v画图片.f变换_重置();
	v画图片.f变换_旋转(m方向);
	v画图片.f画图片(*m属性->m顶点.m指针);
}
//==============================================================================
// 普通线条
//==============================================================================
C玩家子弹图形_线条::C玩家子弹图形_线条(const C玩家子弹 &a对象, C缓冲数组<I图形缓冲> &aa图形缓冲):
	C对象图形<C玩家子弹, 图形::C圆形::C图形缓冲>(a对象, aa图形缓冲) {
	m图形缓冲->f初始化_图层((int)E图层::e玩家子弹);
	m图形缓冲->m颜色 = t颜色::c白;
	m图形缓冲->m线条宽度 = 1;
}
void C玩家子弹图形_线条::f计算() {
}
void C玩家子弹图形_线条::f更新() {
	m图形缓冲->m半径 = m对象->f接口_g判定半径();
	m图形缓冲->m坐标 = m对象->m坐标;
}
}	//namespace 东方山寨