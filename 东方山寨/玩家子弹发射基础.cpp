#include "游戏.h"
#include "玩家子弹基础.h"
#include "玩家子弹发射基础.h"
#include "玩家.h"
namespace 东方山寨 {
//=============================================================================
// 发射环境
//=============================================================================
t向量2 I玩家发射环境::fg相对坐标() const {
	return this->fg发射坐标() - this->fg中心坐标();
}
float I玩家发射环境::fg相对方向r() const {
	return fg相对坐标().fg方向r();
}
const C游戏速度 &I玩家发射环境::fg游戏速度() const {
	return C游戏::g内容.fg游戏速度();
}
const float &I玩家发射环境::fg低速渐变() const {
	return 0;
}
C玩家发射环境::C玩家发射环境(C玩家 &a):
	m玩家(&a) {
}
C玩家 &C玩家发射环境::fg玩家() const {
	return *m玩家;
}
t向量2 C玩家发射环境::fg发射坐标() const {
	return m玩家->m自机.fg坐标();
}
t向量2 C玩家发射环境::fg中心坐标() const {
	return m玩家->m自机.fg坐标();
}
const C游戏速度 &C玩家发射环境::fg游戏速度() const {
	return *m玩家->m游戏速度;
}
t向量2 C玩家发射环境::fg相对坐标() const {
	return t向量2::c零;
}
float C玩家发射环境::fg相对方向r() const {
	return 0;
}
const float &C玩家发射环境::fg低速渐变() const {
	return m玩家->m低速渐变;
}
//=============================================================================
// 发射
//=============================================================================
C玩家子弹发射器::C玩家子弹发射器() :
	m子弹制造机{C游戏::g内容.f工厂_玩家子弹p()} {
}
//初始化
void C玩家子弹发射器::f初始化_发射环境(std::shared_ptr<I玩家发射环境> a) {
	m子弹制造机->m参数.m发射环境 = a.get();
	m发射环境 = a;
}
void C玩家子弹发射器::f初始化_时间变量() {
	m剩余时间 = 0;
	m间隔时间 = 0;
	m发射时间 = 0;
}
//基础
void C玩家子弹发射器::f基础_一键计算(float a发射间隔) {
	f基础_计算时间();
	if (f基础_i可发射()) {
		this->f接口_产生子弹();
		f基础_发射间隔(a发射间隔);
	}
}
void C玩家子弹发射器::f基础_计算时间() {
	const float v秒 = m发射环境->fg游戏速度().fg秒();
	if (m剩余时间 > 0) {
		m剩余时间 -= v秒;
		m发射时间 += v秒;
	} else {
		m发射时间 = 0;
	}
	if (m间隔时间 > 0) {
		m间隔时间 -= v秒;
	}
}
void C玩家子弹发射器::f基础_发射间隔(float a时间) {
	m间隔时间 = a时间;
}
bool C玩家子弹发射器::f基础_i可发射() const {
	if (m间隔时间 <= 0) {
		return m剩余时间 > 0;
	} else {
		return false;
	}
}
bool C玩家子弹发射器::f基础_i发射间隔() const {
	if (m间隔时间 > 0) {
		return m剩余时间 > 0;
	} else {
		return false;
	}
}
bool C玩家子弹发射器::f基础_i不发射() const {
	return m剩余时间 <= 0;
}
void C玩家子弹发射器::f基础_复位() {
	m剩余时间 = 0;
	m间隔时间 = 0;
	m发射时间 = 0;
}
void C玩家子弹发射器::f基础_s子弹属性(const S玩家子弹属性 *a) {
	m子弹制造机->m参数.m子弹属性 = a;
}
void C玩家子弹发射器::f属性_s发射间隔(float a) {
	m发射间隔 = a;
}
//接口
void C玩家子弹发射器::f接口_初始化() {
}
void C玩家子弹发射器::f接口_计算() {
	f基础_一键计算(m发射间隔);
}
void C玩家子弹发射器::f接口_产生子弹() {
	m子弹制造机->m参数.m坐标 = m发射环境->fg发射坐标();
	m子弹制造机->m参数.m速度 = {0, 1000};
	m子弹制造机->f产生子弹<C玩家子弹>();
}
//外部
void C玩家子弹发射器::f发射() {
	m剩余时间 = c发射时间;
}
void C玩家子弹发射器::f计算() {
	this->f接口_计算();
}
void C玩家子弹发射器::f接口_复位() {
	f基础_复位();
}
}	//namespace 东方山寨