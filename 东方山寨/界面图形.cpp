#include "界面图形.h"
#include "游戏.h"
#include "图形_图片.h"
#include "图形管理.h"
namespace 东方山寨 {
//==============================================================================
// 界面图形
//==============================================================================
namespace 界面图形 {
class C标题人物 : public C二维图片图形 {
public:
	C标题人物() {
		m缩放 = t向量2::fc相同(0.4f);
	}
	void f接口_计算() override {
		const float v过秒 = m游戏速度->fg秒();
		f计算_生命();
		const float v目标x = m生命 < 1 ? 
			数学::f插值<float>(c屏幕范围x, 0, m生命) :
			0;
		const t向量2 v抖动 = {sin(m生命 * 0.012f) * 10, sin(m生命 * 0.011f) * 10};
		m目标 = t向量2{v目标x, 0} + v抖动;
		m速度 = m目标 - m坐标;
		f计算_运动();
		m透明度 += m消失 ? -v过秒 : v过秒;
		m透明度 = 数学::f限制<float>(m透明度, 0, 1);
	}
	bool f接口_i可销毁() const override {
		return m消失 && (m透明度 <= 0);
	}
	float f接口_g透明度() const override {
		return m透明度;
	}
	void f消失() {
		m消失 = true;
	}
	void f不消失() {
		m消失 = false;
	}
	t向量2 m目标;
	float m透明度 = 0;
	bool m消失 = false;
};
}	//namespace 界面图形
//==============================================================================
// 界面图形控制
//==============================================================================
C界面图形控制::C界面图形控制() {

}
C界面图形控制::~C界面图形控制() {

}
void C界面图形控制::f计算() {

}
void C界面图形控制::f背景(bool) {

}
void C界面图形控制::f标题人物(bool a) {
	if (a) {
		if (!m标题人物 || !m标题人物->f对象_i使用()) {
			auto v图形工厂 = C游戏::fg资源().f工厂_图形();
			v图形工厂.m参数.m纹理 = C游戏::fg图形().fg纹理()[L"东方月亮船.灵梦"];
			v图形工厂.m参数.m顶点 = C游戏::fg图形().fg顶点矩形()[L"东方月亮船.灵梦"];
			m标题人物 = v图形工厂.f产生图形<界面图形::C标题人物>();
		} else {
			m标题人物->f不消失();
		}
	} else {
		m标题人物->f消失();
	}
}
}	//namespace 东方山寨