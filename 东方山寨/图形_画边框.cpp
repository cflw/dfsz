#include "图形_画边框.h"
#include "图形引擎.h"
#include "游戏常量.h"
namespace 东方山寨 {
//==============================================================================
// 画边框
//==============================================================================
C画边框::C画边框(C图形引擎 &, 二维::C二维 &a二维) :
	m画边框(a二维.fc画图形()) {
	m画边框->fs颜色(t颜色(1, 1, 1, 0.2f));
	m画边框->fs线条宽度(c边框厚度);
}
void C画边框::f画矩形边框(float a半宽, float a半高) const {
	const float v左内 = -a半宽;
	const float v左外 = v左内 - c边框厚度;
	const float v右内 = a半宽;
	const float v右外 = v右内 + c边框厚度;
	const float v上内 = a半高;
	const float v上外 = v上内 + c边框厚度;
	const float v下内 = -a半高;
	const float v下外 = v下内 - c边框厚度;
	m画边框->f填充矩形(t矩形::fc左上右下(v右内, v上外, v右外, v下外));	//右
	m画边框->f填充矩形(t矩形::fc左上右下(v左外, v上外, v左内, v下外));	//左
	m画边框->f填充矩形(t矩形::fc左上右下(v左内, v上外, v右内, v上内));	//上
	m画边框->f填充矩形(t矩形::fc左上右下(v左内, v下内, v右内, v下外));	//下
}
void C画边框::f画圆形边框(float a半径) const {
	const float v半径 = a半径 + c边框厚度 * 0.5f;
	m画边框->f绘制圆形(t圆形(t向量2::c零, v半径));
}
void C画边框::f画框架() const {
	if (m标准半宽 > c框架范围x) {
		//填满
		//m画边框->f填充矩形(t矩形::fc左上右下(c框架范围x, c框架范围y, m标准半宽, -c框架范围y));	//右
		//m画边框->f填充矩形(t矩形::fc左上右下(-m标准半宽, c框架范围y, -c框架范围x, -c框架范围y));	//左
		//边框
		m画边框->f填充矩形(t矩形::fc左上右下(c框架范围x, c外框架范围y, c外框架范围x, -c外框架范围y));	//右
		m画边框->f填充矩形(t矩形::fc左上右下(-c外框架范围x, c外框架范围y, -c框架范围x, -c外框架范围y));	//左
	} else if (m标准半高 > c框架范围y) {
		//填满
		//m画边框->f填充矩形(t矩形::fc左上右下(c框架范围x, m标准半高, -c框架范围x, c框架范围y));	//上
		//m画边框->f填充矩形(t矩形::fc左上右下(c框架范围x, -c框架范围y, -c框架范围x, -m标准半高));	//下
		//边框
		m画边框->f填充矩形(t矩形::fc左上右下(c外框架范围x, c外框架范围y, -c外框架范围x, c框架范围y));	//上
		m画边框->f填充矩形(t矩形::fc左上右下(c外框架范围x, -c框架范围y, -c外框架范围x, -c外框架范围y));	//下
	}
}
void C画边框::fs颜色(const t颜色 &a颜色) {
	m画边框->fs颜色(a颜色);
}
void C画边框::fs标准尺寸(float a宽, float a高) {
	m标准半宽 = a宽 * 0.5f;
	m标准半高 = a高 * 0.5f;
}
}	//namespace 东方山寨