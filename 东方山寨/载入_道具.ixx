export module 东方山寨.载入.道具;
import 东方山寨.载入.内部;
import "道具动画.h";
import "道具.h";
import "游戏.h";
namespace 东方山寨::载入 {
void C内部载入::f道具() {
	auto &va道具属性 = C游戏::fg资源().fg道具属性();
	struct S道具属性0 {
		E道具 m标识;
		tf道具效果 m效果函数;
		int m效果值;
		float m判定半径;
		float m最大透明;
		int m图形标识1;	//纹理
		int m图形标识2;	//顶点
	} v道具属性表[] = {
		//序号				效果					值 半径 透明	图形标识
		{E道具::e残机, 道具效果::f残机_十分之一, 10, 8, 1, 0, 1},
		{E道具::e残机碎片, 道具效果::f残机_十分之一, 3, 8, 1, 0, 0},
		{E道具::e炸弹, 道具效果::f炸弹_十分之一, 10, 8, 1, 0, 3},
		{E道具::e炸弹碎片, 道具效果::f炸弹_十分之一, 3, 8, 1, 0, 2},
		{E道具::e火力, 道具效果::f火力_百分之一, 1, 4, 1, 1, 0},
		{E道具::e得点, 道具效果::f得分_最大点, 1, 4, 1, 1, 1},
		{E道具::e最大点, 道具效果::f最大点, 1000, 4, 1, 1, 2},
		{E道具::e微最大点, 道具效果::f最大点, 10, 4, 0.2f, 1, 3},
	};
	for (auto &v : v道具属性表) {
		S道具属性 &v属性 = va道具属性.f取空((int)v.m标识);
		v属性.mf效果 = v.m效果函数;
		v属性.m值 = v.m效果值;
		v属性.m判定半径 = v.m判定半径;
		v属性.m最大透明度 = v.m最大透明;
		const int v道具图形标识 = 计算::f标识(c道具标识, v.m图形标识1);
		v属性.m纹理 = v道具图形标识;
		v属性.m顶点 = 计算::f标识(v道具图形标识, 0, 0, v.m图形标识2);
		v属性.m动画 = (int)E动画::e道具;
	}
}
}	//namespace 东方山寨::载入