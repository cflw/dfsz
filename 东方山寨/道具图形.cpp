#include "道具图形.h"
#include "道具.h"
#include "图层.h"
namespace 东方山寨 {
//==============================================================================
// 图片
//==============================================================================
C道具图形_图片::C道具图形_图片(const C道具 &a对象, C缓冲数组<I图形缓冲> &aa图形缓冲):
	C对象图形<C道具, C图片动画图形缓冲>(a对象, aa图形缓冲) {
	C图片动画图形::f初始化_父对象(&a对象);
	m图形缓冲->f初始化_图形(*this);
	m图形缓冲->f初始化_图层((int)E图层::e道具);
}
void C道具图形_图片::f计算() {
	m动画->f接口_计算();
}
void C道具图形_图片::f更新() {
	m动画->f接口_更新();
	*m图形缓冲 = m动画->fg动画缓冲();
	m图形缓冲->m坐标 += m对象->m坐标;
}
const S图片动画属性 &C道具图形_图片::fg图片动画属性() const {
	return m对象->fg道具属性();
}
//==============================================================================
// 线条
//==============================================================================
C道具图形_线条::C道具图形_线条(const C道具 &a对象, C缓冲数组<I图形缓冲> &aa图形缓冲):
	C对象图形<C道具, 图形::C圆形::C图形缓冲>(a对象, aa图形缓冲) {
	m图形缓冲->f初始化_图层((int)E图层::e道具);
}
void C道具图形_线条::f计算() {
}
void C道具图形_线条::f更新() {
	if (m对象->m跟随玩家) {
		m图形缓冲->m颜色 = t颜色::c蓝;
	} else {
		m图形缓冲->m颜色 = t颜色::c白;
	}
	m图形缓冲->m坐标 = m对象->m坐标;
	m图形缓冲->m半径 = 3;
}
}	//namespace 东方山寨